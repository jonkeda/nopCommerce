@using System.Reflection
@model VouwwandenModel

@{
    ViewData["Title"] = "Home Page";
}

<script asp-location="Footer">
    @{
        foreach (PropertyInfo info in typeof(VouwwandenModel)
            .GetProperties()
            .Where(p => p.PropertyType.IsAssignableTo(typeof(IPublicConfiguratorField))))
        {
             @:Configurationfields.push('@info.Name');
        }
    }

</script>

<table>
    <tr>
        <th colspan="2">
            Vouwwanden
        </th>
    </tr>
    <tr>
        <td>
            Lengte
        </td>
        <td>
            <input type="number" id="@Html.IdFor(model => model.Length)" />
        </td>
    </tr>
    <tr>
        <td>
            Breedte
        </td>
        <td>
            <input type="number" id="@Html.IdFor(model => model.Width)" />
        </td>
    </tr>
    <tr>
        <td>
            Name
        </td>
        <td>
            <input type="text" id="@Html.IdFor(model => model.Name)" />
        </td>
    </tr>
    <tr>
        <td>
            Date
        </td>
        <td>
            <input type="date" id="@Html.IdFor(model => model.Date)" />
        </td>
    </tr>
    <tr>
        <td>
            Deuren
        </td>
        <td>
            <select id="@Html.IdFor(model => model.Deuren)">
                <option value="Zonder">Zonder deur</option>
                <option value="Enkel">Enkele deur</option>
                <option value="Dubbel">Dubbele deur</option>
            </select>
        </td>
    </tr>
    <tr>
        <td>
            <Button onclick="ConfigurationCalculate()">Calculate</Button>
        </td>
    </tr>
    <tr>
        <td>
            Prijs
        </td>
        <td>
            <input type="number" id="@Html.IdFor(model => model.Price)" readonly="readonly" />
        </td>
    </tr>
    <tr>
        <td>
            <Button onclick="ConfigurationOk()">Ok</Button>
            <Button onclick="ConfigurationCancel()">Cancel</Button>
        </td>
    </tr>

</table>
