@model ProductConfiguratorModel

@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject IWorkContext workContext

@{
	const string hideInfoBlockAttributeName = "ProductConfiguratorPage.HideInfoBlock";
	var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideInfoBlockAttributeName);

	const string hideDisplayBlockAttributeName = "ProductConfiguratorPage.HideDisplayBlock";
	var hideDisplayBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideDisplayBlockAttributeName, defaultValue: true);

	const string hideMappingsBlockAttributeName = "ProductConfiguratorPage.HideMappingsBlock";
	var hideMappingsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideMappingsBlockAttributeName, defaultValue: true);

	const string hideSeoBlockAttributeName = "ProductConfiguratorPage.HideSEOBlock";
	var hideSeoBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSeoBlockAttributeName, defaultValue: true);

	const string hideProductsBlockAttributeName = "ProductConfiguratorPage.HideProductsBlock";
	var hideProductsBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideProductsBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="row">
                <div class="col-md-12 clearfix">
                    <div class="float-left">
                        @await Component.InvokeAsync("SettingMode", new { modeName = "ProductConfigurator-advanced-mode" })
                    </div>
                </div>
            </div>

            <nop-cards id="ProductConfigurator-cards">
                <nop-card asp-name="ProductConfigurator-info" asp-icon="fas fa-info" asp-title="@T("Admin.Catalog.ProductConfigurators.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">@await Html.PartialAsync("_CreateOrUpdate.Info", Model)</nop-card>
                <nop-card asp-name="ProductConfigurator-seo" asp-icon="fas fa-search-plus" asp-title="@T("Admin.Common.SEO")" asp-hide-block-attribute-name="@hideSeoBlockAttributeName" asp-hide="@hideSeoBlock" asp-advanced="true">@await Html.PartialAsync("_CreateOrUpdate.Seo", Model)</nop-card>
                <nop-card asp-name="ProductConfigurator-products" asp-icon="fas fa-th-list" asp-title="@T("Admin.Catalog.ProductConfigurators.Products")" asp-hide-block-attribute-name="@hideProductsBlockAttributeName" asp-hide="@hideProductsBlock" asp-advanced="true">@await Html.PartialAsync("_CreateOrUpdate.Products", Model)</nop-card>

                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.ProductConfiguratorDetailsBlock, additionalData = Model })
            </nop-cards>
        </div>
    </div>
</section>