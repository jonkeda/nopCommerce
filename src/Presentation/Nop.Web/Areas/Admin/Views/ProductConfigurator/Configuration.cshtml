@using System.Reflection
@model ProductConfiguratorConfigurationModel

@{
    Layout = "_AdminPopupLayout";

    //page title
    ViewBag.PageTitle = T("Admin.Catalog.ProductConfigurator.Configuration").Text;
}

<script>
    var Configurationfields = [];
    @{
        if (Model.ViewName != null)
        {
            foreach (PropertyInfo info in Model.ModelType
            .GetProperties()
            .Where(p => p.PropertyType.IsAssignableTo(typeof(IProductConfiguratorField))))
            {
             @:Configurationfields.push('@info.Name');
            }
        }
    }
    var ConfigurationGetValue = function(id) {
        var value = {}
        value.value = $('#' + id + '_Value').val();
        return value;
    }
    var ConfigurationSetValue = function (id, data) {
        if (data) {
            valField('#' + id + '_Value', null, data.Value);
            var el = $('#' + id + '_Value');
            if (el) {
                //el.valField(data.Value);
                //if (data.isVisible) {
                //    //el.show();
                //    el.showField();
                //} else {
                //    el.hide();
                //}
                // todo error messages
            }
        }
    }
    var ConfigurationName = function(field) {
        return field.substr(0, 1).toLowerCase() + field.substr(1);
    }
    var ConfigurationGetCfg = function() {
        var cfg = {}
        var i, field, name;
        for (i = 0; i < Configurationfields.length; i++) {
            field = Configurationfields[i];
            name = ConfigurationName(field);
            cfg[name] = ConfigurationGetValue(field);
        }
        return cfg;
    }
    var ConfigurationSetCfg = function(data) {
        var i, field, name;
        for (i = 0; i < Configurationfields.length; i++) {
            field = Configurationfields[i];
            // name = ConfigurationName(field);
            name = field;
            ConfigurationSetValue(field, data[name]);
        }
    }
    var ConfigurationCalculate = function (cfg) {
        if (!cfg) {
            cfg = JSON.stringify(ConfigurationGetCfg());
        }
        var model = {};
        model.ConfiguratorId = $('#ConfiguratorId').val();
        model.Json = cfg;
        addAntiForgeryToken(model);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Calculate", "ProductConfigurator")',
            dataType: 'json',
            data: model,
            success: function (data) {
                ConfigurationSetCfg(JSON.parse(data.Json));
            },
            error: function (ex) {
                //window.alert(ex);
            }
        });
    }
    var ConfigurationCancel = function () {
        window.close();
    }
    var ConfigurationOk = function () {
        $("#Configuration", window.opener.document).val(JSON.stringify(ConfigurationGetCfg()));
        $("#ConfiguratorId", window.opener.document).val($('#ConfiguratorId').val());
        window.close();
    }
    $(document).ready(function () {
        if (window.opener) {
            //$('#ConfiguratorId').val($("#ConfiguratorId", window.opener.document).val());
            var cfg = $("#Configuration", window.opener.document).val();
            if (cfg === '') {
                cfg = '{}';
            }
            else {
                ConfigurationCalculate(cfg);
            }
        }
        var i;
        for (i = 0; i < Configurationfields.length; i++) {
            var field = Configurationfields[i];
            $("#" + field + '_Value').change(function () {
                ConfigurationCalculate();
            });
        }
    });

</script>

<form asp-controller="ProductConfigurator" asp-action="Configuration">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Catalog.ProductConfigurator.Configuration")
        </h1>
        <div class="float-right">
            &nbsp;
        </div>
    </div>
    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search card-popup">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-12">
                                    @*<div class="form-group row" @(Model.AvailableConfigurators.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>*@
                                    <div class="form-group row">
                                        <div class="col-sm-5">
                                            <nop-label asp-for="ConfiguratorId" />
                                        </div>
                                        <div class="col-sm-7">
                                            <nop-select asp-for="ConfiguratorId" asp-items="Model.AvailableConfigurators" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <button type="submit" id="select-productconfigurator" class="btn btn-primary btn-search">
                                        <i class="fas fa-cogs"></i>
                                        @T("Admin.Common.Select")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card card-default">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card-body">
                                        @await Component.InvokeAsync(Model.ViewName, Model.DefaultModel)
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="card-body">
                                            <div class="form-group row">
                                                <div class="col-md-3">
                                                    <nop-label asp-for="Price" />
                                                </div>
                                                <div class="col-md-9">
                                                    <nop-editor asp-for="Price.Value" readonly="readonly" />
                                                    <span asp-validation-for="Price"></span>
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                <div class="col-md-3">
                                                    <nop-label asp-for="Tax" />
                                                </div>
                                                <div class="col-md-9">
                                                    <nop-editor asp-for="Tax.Value" readonly="readonly" />
                                                    <span asp-validation-for="Tax"></span>
                                                </div>
                                            </div>

                                            <div class="form-group row">
                                                <div class="col-md-3">
                                                    <nop-label asp-for="PriceIncludingTax" />
                                                </div>
                                                <div class="col-md-9">
                                                    <nop-editor asp-for="PriceIncludingTax.Value" readonly="readonly" />
                                                    <span asp-validation-for="PriceIncludingTax"></span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="button" name="save" class="btn btn-primary" onclick="ConfigurationOk()">
                                <i class="far fa-save"></i>
                                @T("Admin.Common.Save")
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>